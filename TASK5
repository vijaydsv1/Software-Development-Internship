class Task:
    def __init__(self, id, title, description, status):
        self.id = id
        self.title = title
        self.description = description
        self.status = status
class TaskManager:
    def __init__(self, filename):
        self.tasks = []
        self.filename = filename
        self.load_tasks()
    def create_task(self):
        title = input("Enter task title: ")
        description = input("Enter task description: ")
        status = input("Enter task status (e.g., 'open', 'in progress', 'done'): ")
        new_task = Task(len(self.tasks) + 1, title, description, status)
        self.tasks.append(new_task)
        self.save_tasks()
        print("Task created successfully!")
    def read_tasks(self):
        if not self.tasks:
            print("No tasks available.")
        else:
            print("Tasks:")
            for task in self.tasks:
                print(f"ID: {task.id}, Title: {task.title}, Description: {task.description}, Status: {task.status}")
    def update_task(self):
        task_id = int(input("Enter task ID to update: "))
        for task in self.tasks:
            if task.id == task_id:
                task.title = input("Enter new task title: ")
                task.description = input("Enter new task description: ")
                task.status = input("Enter new task status (e.g., 'open', 'in progress', 'done'): ")
                self.save_tasks()
                print("Task updated successfully!")
                return
        print("Task not found.")
    def delete_task(self):
        task_id = int(input("Enter task ID to delete: "))
        for task in self.tasks:
            if task.id == task_id:
                self.tasks.remove(task)
                self.save_tasks()
                print("Task deleted successfully!")
                return
        print("Task not found.")
    def save_tasks(self):
        try:
            with open(self.filename, "w") as file:
                for task in self.tasks:
                    file.write(f"{task.id},{task.title},{task.description},{task.status}\n")
        except IOError as e:
            print(f"Error saving tasks: {e}")

    def load_tasks(self):
        try:
            with open(self.filename, "r") as file:
                for line in file:
                    id, title, description, status = line.strip().split(",")
                    self.tasks.append(Task(int(id), title, description, status))
        except IOError as e:
            print(f"Error loading tasks: {e}")
def main():
    task_manager = TaskManager("tasks.txt")
    while True:
        print("\nTask Manager")
        print("1. Create Task")
        print("2. Read Tasks")
        print("3. Update Task")
        print("4. Delete Task")
        print("5. Exit")
        choice = input("Choose an option: ")
        if choice == "1":
            task_manager.create_task()
        elif choice == "2":
            task_manager.read_tasks()
        elif choice == "3":
            task_manager.update_task()
        elif choice == "4":
            task_manager.delete_task()
        elif choice == "5":
            break
        else:
            print("Invalid option. Please try again.")

if __name__ == "__main__":
    main()
